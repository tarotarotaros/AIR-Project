name: Release Build

on:
  push:
    tags:
      - 'v*' # v1.0.0, v0.1.0 などのタグにマッチ

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies
        run: npm ci

      - name: Build Tauri app
        run: npm run tauri build

      - name: Get version from tag
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## AIR-Project ${{ github.ref_name }}

            Windows用デスクトップアプリケーション

            ### ダウンロード
            - **AIR-Project.exe**: スタンドアロン実行ファイル（推奨）
            - **AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64-setup.exe**: NSISインストーラー
            - **AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64_en-US.msi**: MSIインストーラー

            ### インストール方法
            1. ダウンロードしたファイルを実行
            2. セットアップウィザードに従ってインストール

            ### システム要件
            - Windows 10 以降
            - WebView2 Runtime（未インストールの場合は自動インストールされます）
          draft: false
          prerelease: false

      - name: Upload Release Asset - EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/AIR-Project.exe
          asset_name: AIR-Project.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - MSI (if exists)
        uses: actions/upload-release-asset@v1
        if: hashFiles('src-tauri/target/release/bundle/msi/*.msi') != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/msi/AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64_en-US.msi
          asset_name: AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64_en-US.msi
          asset_content_type: application/x-msi

      - name: Upload Release Asset - NSIS (if exists)
        uses: actions/upload-release-asset@v1
        if: hashFiles('src-tauri/target/release/bundle/nsis/*.exe') != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/nsis/AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64-setup.exe
          asset_name: AIR-Project_${{ steps.get_version.outputs.VERSION }}_x64-setup.exe
          asset_content_type: application/octet-stream
